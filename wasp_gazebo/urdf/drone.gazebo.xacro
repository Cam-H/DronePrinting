<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="indices" value="${[0, 1, 2, 3, 4, 5]}"/>

  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
    <maxVel>100.0</maxVel>
    <minDepth>0.001</minDepth>
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
  </gazebo>

  <gazebo>
    <link name="$(arg model)/ground_truth/odometry_sensorgt_link">
      <pose>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.15</mass>
        <inertia>
          <ixx>0.0001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0002</iyy>
          <iyz>0</iyz>
          <izz>0.0002</izz>
        </inertia>
      </inertial>
      <self_collide>0</self_collide>
    </link>

    <joint name="$(arg model)/ground_truth/odometry_sensorgt_joint" type="revolute">
      <child>$(arg model)/ground_truth/odometry_sensorgt_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <damping>1.0</damping>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
      <physics>
        <ode>
          <implicit_spring_damper>1</implicit_spring_damper>
        </ode>
      </physics>
    </joint>

    <link name="$(arg model)/imu_link">
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>0.15</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00001</iyy>
          <iyz>0</iyz>
          <izz>0.00001</izz>
        </inertia>
      </inertial>
      <sensor name="imu_sensor" type="imu">
        <pose>0 0 0 3.141593 0 0</pose>
        <always_on>1</always_on>
        <update_rate>1000.0</update_rate>
      </sensor>
      <self_collide>0</self_collide>
    </link>

    <joint name="$(arg model)/imu_joint" type="revolute">
      <child>$(arg model)/imu_link</child>
      <parent>base_link</parent>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>0</effort>
          <velocity>0</velocity>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
  </gazebo>

  <xacro:macro name="rotor" params="indices:=^">
    <xacro:if value="${indices}">
      <xacro:property name="idx" value="${indices.pop(0)}"/>

      <gazebo reference="rotor_${idx}">
        <xacro:if value="${idx % 2 == 0}">
          <material>Gazebo/Red</material>
        </xacro:if>
        <xacro:unless value="${idx % 2 == 0}">
          <material>Gazebo/Blue</material>
        </xacro:unless>
        <self_collide>0</self_collide>
      </gazebo>

      <gazebo>
        <plugin name="rotor_${idx}_blade_1" filename="libLiftDragPlugin.so">
          <a0>0.3</a0>
          <alpha_stall>1.4</alpha_stall>
          <cla>4.2500</cla>
          <cda>0.10</cda>
          <cma>0.00</cma>
          <cla_stall>-0.025</cla_stall>
          <cda_stall>0.0</cda_stall>
          <cma_stall>0.0</cma_stall>
          <area>0.002</area>
          <air_density>1.2041</air_density>
          <cp>0.084 0 0</cp>
          <forward>0 ${1 - 2 * (idx % 2)} 0</forward>
          <upward>0 0 1</upward>
          <link_name>$(arg model)::rotor_${idx}</link_name>
        </plugin>
        <plugin name="rotor_${idx}_blade_2" filename="libLiftDragPlugin.so">
          <a0>0.3</a0>
          <alpha_stall>1.4</alpha_stall>
          <cla>4.2500</cla>
          <cda>0.10</cda>
          <cma>0.00</cma>
          <cla_stall>-0.025</cla_stall>
          <cda_stall>0.0</cda_stall>
          <cma_stall>0.0</cma_stall>
          <area>0.002</area>
          <air_density>1.2041</air_density>
          <cp>-0.084 0 0</cp>
          <forward>0 ${2 * (idx % 2) - 1} 0</forward>
          <upward>0 0 1</upward>
          <link_name>$(arg model)::rotor_${idx}</link_name>
        </plugin>
      </gazebo>

      <xacro:rotor/>
    </xacro:if>
  </xacro:macro>
  <xacro:rotor indices="${list(indices)}"/>
  <gazebo>
    <plugin name="arducopter_plugin" filename="libArduPilotPlugin.so">
      <fdm_addr>127.0.0.1</fdm_addr>
      <fdm_port_in>9002</fdm_port_in>
      <fdm_port_out>9003</fdm_port_out>
      <!--
            Require by APM :
            Only change model and gazebo from XYZ to XY-Z coordinates
        -->
      <modelXYZToAirplaneXForwardZDown>0 0 0 3.141593 0 0</modelXYZToAirplaneXForwardZDown>
      <gazeboXYZToNED>0 0 0 3.141593 0 0</gazeboXYZToNED>
      <imuName>$(arg model)::$(arg model)/imu_link::imu_sensor</imuName>
      <connectionTimeoutMaxCount>5</connectionTimeoutMaxCount>
      <!--
            incoming control command [0, 1]
            so offset it by 0 to get [0, 1]
            and divide max target by 1.
            offset = 0
            multiplier = 838 max rpm / 1 = 838
          -->
      <xacro:macro name="channel" params="indices:=^">
        <xacro:if value="${indices}">
          <xacro:property name="idx" value="${indices.pop(0)}"/>
          <control channel="${idx}">
            <type>VELOCITY</type>
            <offset>0</offset>
            <p_gain>0.20</p_gain>
            <i_gain>0</i_gain>
            <d_gain>0</d_gain>
            <i_max>0</i_max>
            <i_min>0</i_min>
            <cmd_max>2.5</cmd_max>
            <cmd_min>-2.5</cmd_min>
            <jointName>$(arg model)::rotor_${idx}_joint</jointName>
            <multiplier>${(1 - 2 * (idx % 2)) * 920}</multiplier>
            <controlVelocitySlowdownSim>1</controlVelocitySlowdownSim>
          </control>
          <xacro:channel/>
        </xacro:if>
      </xacro:macro>
      <xacro:channel indices="${list(indices)}"/>
    </plugin>
  </gazebo>
</robot>
